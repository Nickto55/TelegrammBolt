#!/usr/bin/env python3
"""
üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ú–ü–û–†–¢–û–í
–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –ø–æ—Å–ª–µ —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
"""
import os
import re
import sys

class Colors:
    GREEN = '\033[92m'
    RED = '\033[91m'
    YELLOW = '\033[93m'
    BLUE = '\033[94m'
    END = '\033[0m'

def print_header(msg):
    print(f"\n{Colors.BLUE}{'='*70}{Colors.END}")
    print(f"{Colors.BLUE}{msg}{Colors.END}")
    print(f"{Colors.BLUE}{'='*70}{Colors.END}\n")

def print_success(msg):
    print(f"{Colors.GREEN}‚úì{Colors.END} {msg}")

def print_warning(msg):
    print(f"{Colors.YELLOW}‚ö†{Colors.END} {msg}")

def print_error(msg):
    print(f"{Colors.RED}‚úó{Colors.END} {msg}")

# –ö–∞—Ä—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∏–º–ø–æ—Ä—Ç–æ–≤
IMPORT_FIXES = {
    'bot/': {
        # –í bot.py –∏–º–ø–æ—Ä—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–∑ config –∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ
        r'from config import': r'from config.config import',
        r'^import config$': r'import config.config as config',
        
        # –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤ bot/ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ
        r'from commands import': r'from .commands import',
        r'from dse_watcher import': r'from .dse_watcher import',
        r'from chat_manager import': r'from .chat_manager import',
        r'from user_manager import': r'from .user_manager import',
        r'from dse_manager import': r'from .dse_manager import',
        r'from email_manager import': r'from .email_manager import',
        r'from gui_manager import': r'from .gui_manager import',
        r'from pdf_generator import': r'from .pdf_generator import',
        r'from commands_handlers import': r'from .commands_handlers import',
        
        # –î–ª—è –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        r'^import commands$': r'from . import commands',
        r'^import dse_watcher$': r'from . import dse_watcher',
        r'^import chat_manager$': r'from . import chat_manager',
        r'^import user_manager$': r'from . import user_manager',
        r'^import dse_manager$': r'from . import dse_manager',
    },
    'web/': {
        # –í web_app.py –∏–º–ø–æ—Ä—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–∑ –¥—Ä—É–≥–∏—Ö –ø–∞–ø–æ–∫
        r'from config import': r'from config.config import',
        r'import config$': r'import config.config as config',
        
        # –ò–º–ø–æ—Ä—Ç—ã –∏–∑ bot/
        r'from user_manager import': r'from bot.user_manager import',
        r'from dse_manager import': r'from bot.dse_manager import',
        r'from pdf_generator import': r'from bot.pdf_generator import',
        r'from email_manager import': r'from bot.email_manager import',
        
        r'^import user_manager$': r'from bot import user_manager',
        r'^import dse_manager$': r'from bot import dse_manager',
    },
    'scripts/': {
        # –í —Å–∫—Ä–∏–ø—Ç–∞—Ö - –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
        r'from config import': r'from config.config import',
        r'import config$': r'import config.config as config',
        
        r'from user_manager import': r'from bot.user_manager import',
        r'from dse_manager import': r'from bot.dse_manager import',
        
        r'^import user_manager$': r'from bot import user_manager',
        r'^import dse_manager$': r'from bot import dse_manager',
    }
}

def fix_imports_in_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤ –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª
    directory = None
    for dir_name in ['bot/', 'web/', 'scripts/']:
        if dir_name in file_path.replace('\\', '/'):
            directory = dir_name
            break
    
    if not directory or directory not in IMPORT_FIXES:
        return 0, 0  # –§–∞–π–ª –Ω–µ –≤ —Ü–µ–ª–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        fixes = IMPORT_FIXES[directory]
        changes = 0
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        lines = content.split('\n')
        new_lines = []
        
        for line in lines:
            new_line = line
            for pattern, replacement in fixes.items():
                if re.search(pattern, new_line):
                    new_line = re.sub(pattern, replacement, new_line)
                    if new_line != line:
                        changes += 1
            new_lines.append(new_line)
        
        new_content = '\n'.join(new_lines)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if new_content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(new_content)
            return changes, 1
        
        return 0, 0
        
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {file_path}: {e}")
        return 0, 0

def add_init_files():
    """–î–æ–±–∞–≤–ª—è–µ—Ç __init__.py –≤ –ø–∞–∫–µ—Ç—ã"""
    print_header("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ __init__.py –¥–ª—è –ø–∞–∫–µ—Ç–æ–≤")
    
    packages = ['bot', 'config', 'web']
    
    for package in packages:
        init_file = os.path.join(package, '__init__.py')
        if not os.path.exists(init_file):
            try:
                with open(init_file, 'w', encoding='utf-8') as f:
                    f.write(f'"""–ü–∞–∫–µ—Ç {package}"""\n')
                print_success(f"–°–æ–∑–¥–∞–Ω: {init_file}")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {init_file}: {e}")
        else:
            print_warning(f"–£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {init_file}")

def main():
    print("\n" + "="*70)
    print("üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ú–ü–û–†–¢–û–í")
    print("="*70)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    if not os.path.exists('bot') or not os.path.exists('web'):
        print_error("–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞!")
        return 1
    
    # –°–æ–∑–¥–∞–µ–º __init__.py
    add_init_files()
    
    # –°–∫–∞–Ω–∏—Ä—É–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    print_header("üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤")
    
    total_files = 0
    total_changes = 0
    fixed_files = 0
    
    directories = ['bot', 'web', 'scripts']
    
    for directory in directories:
        if not os.path.exists(directory):
            continue
        
        print(f"\nüìÅ {directory}/")
        
        for root, dirs, files in os.walk(directory):
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º __pycache__
            dirs[:] = [d for d in dirs if d not in ['__pycache__', '.git']]
            
            for file in files:
                if file.endswith('.py') and file != '__init__.py':
                    file_path = os.path.join(root, file)
                    changes, fixed = fix_imports_in_file(file_path)
                    
                    total_files += 1
                    total_changes += changes
                    fixed_files += fixed
                    
                    rel_path = os.path.relpath(file_path)
                    if changes > 0:
                        print_success(f"  {rel_path}: {changes} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
                    else:
                        print(f"  {rel_path}: OK")
    
    # –ò—Ç–æ–≥–∏
    print_header("üìä –ò–¢–û–ì–ò")
    
    print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_files}")
    print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {fixed_files}")
    print(f"–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {total_changes}")
    
    if total_changes > 0:
        print(f"\n{Colors.GREEN}‚úÖ –ò–ú–ü–û–†–¢–´ –û–ë–ù–û–í–õ–ï–ù–´!{Colors.END}")
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: git diff")
        print("  2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞: cd bot && python bot.py")
        print("  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–µ–±: cd web && python web_app.py")
    else:
        print(f"\n{Colors.YELLOW}‚ö†Ô∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è{Colors.END}")
    
    print()
    return 0

if __name__ == "__main__":
    sys.exit(main())
