# bot.py
import asyncio
import logging
from typing import Optional

from telegram.ext import Application, ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from config import BOT_TOKEN
from commands import start, button_handler, handle_message, cancel_photo_command
from dse_watcher import load_watched_dse_data, start_watcher_job

logger = logging.getLogger(__name__)


async def chat_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ /chat"""
    from chat_manager import show_chat_menu

    if await _check_permission(update, 'chat_dse'):
        await show_chat_menu(update, context)


async def end_chat_command(update, context):
    """–ö–æ–º–∞–Ω–¥–∞ /endchat"""
    from chat_manager import end_chat_command

    if await _check_permission(update, 'chat_dse'):
        await end_chat_command(update, context)


async def _check_permission(update, permission: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
    from user_manager import has_permission
    
    user_id = str(update.effective_user.id)
    if has_permission(user_id, permission):
        return True
    
    await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    return False


async def post_init(application: Application) -> None:
    """–§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    logger.info("üöÄ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ó–∞–ø—É—Å–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –î–°–ï
        load_watched_dse_data()
        logger.info("üìä –î–∞–Ω–Ω—ã–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –î–°–ï –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º —Ü–∏–∫–ª–µ —Å–æ–±—ã—Ç–∏–π
        loop = asyncio.get_running_loop()
        loop.create_task(start_watcher_job(application))
        logger.info("‚è±Ô∏è  –ó–∞–¥–∞—á–∞ DSE Watcher –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞")

        logger.info("‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        raise


def _register_handlers(app: Application) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    handlers = [
        CommandHandler("start", start),
        CommandHandler("chat", chat_command),
        CommandHandler("endchat", end_chat_command),
        CommandHandler("cancel_photo", cancel_photo_command),
        CallbackQueryHandler(button_handler),
        MessageHandler(filters.TEXT | filters.PHOTO | filters.CAPTION, handle_message),
    ]
    
    for handler in handlers:
        app.add_handler(handler)
    
    logger.info(f"üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(handlers)} –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤")


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = ApplicationBuilder().token(BOT_TOKEN).post_init(post_init).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        _register_handlers(app)

        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        logger.info("=" * 50)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        app.run_polling()
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        raise


if __name__ == "__main__":
    main()