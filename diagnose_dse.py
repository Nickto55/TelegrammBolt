#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞—è–≤–∫–∞–º–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π
"""

import json
import os
import sys

DATA_FILE = 'bot_data.json'

def diagnose():
    print("="*80)
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–Ø–í–û–ö")
    print("="*80)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if not os.path.exists(DATA_FILE):
        print(f"‚ùå –§–∞–π–ª {DATA_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"‚úÖ –§–∞–π–ª {DATA_FILE} –Ω–∞–π–¥–µ–Ω")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    try:
        with open(DATA_FILE, 'r', encoding='utf-8') as f:
            data = json.load(f)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        return
    
    print()
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(data)}")
    
    total_records = 0
    records_with_photo = 0
    records_without_id = 0
    problematic_records = []
    
    # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for user_id, records in data.items():
        if not isinstance(records, list):
            print(f"‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: –¥–∞–Ω–Ω—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å–ø–∏—Å–∫–æ–º!")
            continue
        
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}:")
        print(f"   –ó–∞—è–≤–æ–∫: {len(records)}")
        
        for idx, record in enumerate(records):
            total_records += 1
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            required_fields = ['dse', 'problem_type', 'datetime']
            missing_fields = [f for f in required_fields if f not in record]
            
            if missing_fields:
                problematic_records.append({
                    'user_id': user_id,
                    'index': idx,
                    'dse': record.get('dse', 'N/A'),
                    'missing': missing_fields
                })
                print(f"   ‚ö†Ô∏è  –ó–∞—è–≤–∫–∞ #{idx}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è {missing_fields}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ ID
            if 'id' not in record:
                records_without_id += 1
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ
            if record.get('photo_file_id'):
                records_with_photo += 1
                print(f"   üì∑ –ó–∞—è–≤–∫–∞ #{idx} ({record.get('dse', 'N/A')}): –µ—Å—Ç—å —Ñ–æ—Ç–æ")
    
    print()
    print("="*80)
    print("üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {total_records}")
    print(f"   –° —Ñ–æ—Ç–æ: {records_with_photo}")
    print(f"   –ë–µ–∑ ID: {records_without_id}")
    print(f"   –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö: {len(problematic_records)}")
    print()
    
    if records_without_id > 0:
        print(f"‚ö†Ô∏è  {records_without_id} –∑–∞—è–≤–æ–∫ –±–µ–∑ –ø–æ–ª—è 'id'")
        print("   –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - ID –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ")
        print()
    
    if problematic_records:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ù–´–ï –ó–ê–Ø–í–ö–ò:")
        for rec in problematic_records[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {rec['user_id']}, –∏–Ω–¥–µ–∫—Å {rec['index']}")
            print(f"     –î–°–ï: {rec['dse']}")
            print(f"     –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {', '.join(rec['missing'])}")
        
        if len(problematic_records) > 5:
            print(f"   ... –∏ –µ—â–µ {len(problematic_records) - 5} –∑–∞—è–≤–æ–∫")
    else:
        print("‚úÖ –í—Å–µ –∑–∞—è–≤–∫–∏ –∏–º–µ—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!")
    
    print()
    print("="*80)
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print()
    
    if records_with_photo > 0:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {records_with_photo} –∑–∞—è–≤–æ–∫ —Å —Ñ–æ—Ç–æ")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("   ‚Ä¢ BOT_TOKEN –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤ config.py")
        print("   ‚Ä¢ –ü–∞–ø–∫–∞ photos/temp/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏")
        print("   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω nest-asyncio: pip install nest-asyncio")
        print()
    
    if problematic_records:
        print("‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞—è–≤–∫–∏ –≤ bot_data.json")
        print("   –î–æ–±–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")
        print()
    
    print("üîß –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run_web_dev.py")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:5000")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞—è–≤–∫–∏")
    print()
    print("="*80)

if __name__ == '__main__':
    diagnose()
