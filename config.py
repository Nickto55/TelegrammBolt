# config.py
import json
import logging
import os
from datetime import datetime as dt

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –ª–æ–≥–æ–≤
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("telegram.ext.Application").setLevel(logging.WARNING)
logging.getLogger("apscheduler").setLevel(logging.WARNING)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(message)s',
    level=logging.INFO,
    datefmt='%Y-%m-%d %H:%M:%S'
)

# –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
DATA_FILE = "bot_data.json"
USERS_FILE = "users_data.json"
CHAT_FILE = "chat_data.json"
WATCHED_DSE_FILE = "watched_dse.json"  # –ù–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
PHOTOS_DIR = "photos"
os.makedirs(PHOTOS_DIR, exist_ok=True) # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è


def load_data(filename):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists(filename):
        try:
            with open(filename, 'r', encoding='utf-8') as f:
                return json.load(f)
        except Exception as e:
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            # logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {filename}: {e}")
            return {}
    return {}


def save_data(data, filename):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª"""
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ {filename}: {e}")
        raise  # –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–Ω–∞–ª–∞ –æ–± –æ—à–∏–±–∫–µ


# --- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –∏–∑ ven_bot.json ---
def load_config_settings_bot(ven_bot: str = "ven_bot.json"):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ (—Ç–æ–∫–µ–Ω, –∞–¥–º–∏–Ω—ã) –∏–∑ —Ñ–∞–π–ª–∞ ven_bot.json.
    –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–ª–∏ –ø–æ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Å–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–≤–æ–¥ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–º–µ—á–∞–µ—Ç).
    """
    file_path = os.path.join(os.getcwd(), ven_bot)

    # –®–∞–±–ª–æ–Ω –¥–∞–Ω–Ω—ã—Ö
    ven_bot_data = {
        "BOT_TOKEN": "",  # –£–±—Ä–∞–Ω–æ –¥–≤–æ–µ—Ç–æ—á–∏–µ
        "ADMIN_IDS": [],  # –£–±—Ä–∞–Ω–æ –¥–≤–æ–µ—Ç–æ—á–∏–µ
        "BOT_USERNAME": ""  # Username –±–æ—Ç–∞ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    }

    def update_data(key_to_update):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø–æ–ª–µ –≤ ven_bot_data –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ñ–∞–π–ª."""
        nonlocal ven_bot_data, file_path

        # –ü—Ä–æ—Å—Ç–∞—è "–∑–∞–≥–ª—É—à–∫–∞" –¥–ª—è –ø–æ–º–µ—Ç–∫–∏ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
        if key_to_update == "":
            if key_to_update == "BOT_TOKEN":
                ven_bot_data[key_to_update] = "YOUR_BOT_TOKEN_HERE"
            elif key_to_update == "ADMIN_IDS":
                ven_bot_data[key_to_update] = ["YOUR_TELEGRAM_ID_HERE"]

        save_data(ven_bot_data, file_path)

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(os.path.dirname(file_path), exist_ok=True)

    # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å —à–∞–±–ª–æ–Ω–æ–º
    if not os.path.exists(file_path):
        save_data(ven_bot_data, file_path)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∞–±–ª–æ–Ω
        print(f"‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ {file_path}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ.")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
    try:
        loaded_data = load_data(file_path)
        if isinstance(loaded_data, dict):
            ven_bot_data.update(loaded_data)  # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª {file_path} –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {file_path}: {e}. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è. –ï—Å–ª–∏ –Ω–µ—Ç - –ø–æ–º–µ—á–∞–µ–º.
    for key in ven_bot_data.keys():
        if ven_bot_data.get(key, "") == "" or (isinstance(ven_bot_data[key], list) and not ven_bot_data[key]):
            print(f"‚ö†Ô∏è  –ü–æ–ª–µ '{key}' –≤ {file_path} –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ.")
            update_data(key)  # –ü–æ–º–µ—á–∞–µ–º –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –ø–æ–ª–µ

    return ven_bot_data


# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ven_bot_data = load_config_settings_bot()

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
BOT_TOKEN = ven_bot_data.get("BOT_TOKEN", "")
BOT_USERNAME = ven_bot_data.get("BOT_USERNAME", "")  # Username –±–æ—Ç–∞
# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ ADMIN_IDS –≤—Å–µ–≥–¥–∞ —Å–ø–∏—Å–æ–∫
ADMIN_IDS = ven_bot_data.get("ADMIN_IDS", [])
if not isinstance(ADMIN_IDS, list):
    ADMIN_IDS = [ADMIN_IDS] if ADMIN_IDS else []

# –°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –ø—Ä–æ–±–ª–µ–º
PROBLEM_TYPES = [
    "–û—à–∏–±–∫–∞ –£–ü –∏ –ö–ù",
    "–ó–∞–º–µ—á–∞–Ω–∏–µ –ø–æ –±–∞–∑–∏—Ä–æ–≤–∞–Ω–∏—é",
    "–ó–∞–º–µ—á–∞–Ω–∏–µ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ",
    "–ó–∞–ø—Ä–æ—Å –ø–æ –ö–î –∏ –¢–î",
    "–û—Å–Ω–∞—Å—Ç–∫–∞",
    "–ú–∞—Ä—à—Ä—É—Ç",
    "–¢—Ä—É–¥–æ–µ–º–∫–æ—Å—Ç—å",
    "–†–∞—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
    "–ü–µ—Ä–µ–≤–æ–¥",
    "–î—Ä—É–≥–æ–µ"
]

# –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤
RC_TYPES = [
    "11102",
    "11402", 
    "11403",
    "11404"
]

# --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ ---
if not BOT_TOKEN or BOT_TOKEN == "YOUR_BOT_TOKEN_HERE":
    print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –≤ ven_bot.json!")
    # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å sys.exit(1) –∑–¥–µ—Å—å, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è –±–µ–∑ —Ç–æ–∫–µ–Ω–∞

if not ADMIN_IDS or (len(ADMIN_IDS) == 1 and ADMIN_IDS[0] == "YOUR_TELEGRAM_ID_HERE"):
    print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ADMIN_IDS –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω–Ω—ã–π ID –≤ ven_bot.json.")

# === –ù–ê–°–¢–†–û–ô–ö–ò SMTP –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò EMAIL ===
# –≠—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ ven_bot.json –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –Ω–∏—Ö
SMTP_SETTINGS = {
    "SMTP_SERVER": "smtp.gmail.com",  # –î–ª—è Gmail
    "SMTP_PORT": 587,
    "SMTP_USER": "",  # –í–∞—à email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    "SMTP_PASSWORD": "",  # –ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Gmail –∏–ª–∏ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å
    "FROM_NAME": "–ë–æ—Ç —É—á–µ—Ç–∞ –î–°–ï"  # –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ SMTP –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
def load_smtp_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"""
    smtp_file = "smtp_config.json"
    
    if os.path.exists(smtp_file):
        try:
            smtp_data = load_data(smtp_file)
            if smtp_data:
                SMTP_SETTINGS.update(smtp_data)
                return True
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
    
    return False

# –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ —Ñ–∞–π–ª–∞
if not load_smtp_config():
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
    smtp_template = {
        "SMTP_SERVER": "smtp.gmail.com",
        "SMTP_PORT": 587,
        "SMTP_USER": "your_email@gmail.com",
        "SMTP_PASSWORD": "your_app_password",
        "FROM_NAME": "–ë–æ—Ç —É—á–µ—Ç–∞ –î–°–ï"
    }
    
    smtp_file = "smtp_config.json"
    if not os.path.exists(smtp_file):
        try:
            save_data(smtp_template, smtp_file)
            print(f"‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ SMTP: {smtp_file}")
            print("üìß –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø–æ email –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ smtp_config.json")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫
def is_smtp_configured():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ email"""
    return (SMTP_SETTINGS.get("SMTP_USER") and 
            SMTP_SETTINGS.get("SMTP_PASSWORD") and
            SMTP_SETTINGS["SMTP_USER"] != "your_email@gmail.com")


# === –ù–ê–°–¢–†–û–ô–ö–ò –ê–î–ú–ò–ù–û–í –î–õ–Ø –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–ê ===
# –ö—Ä–µ–¥–µ–Ω—à–∏–∞–ª—ã –¥–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å
# –ü–∞—Ä–æ–ª–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –≤–∏–¥–µ SHA256 —Ö–µ—à–µ–π
import hashlib

def generate_password_hash(password: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SHA256 —Ö–µ—à –¥–ª—è –ø–∞—Ä–æ–ª—è"""
    return hashlib.sha256(password.encode()).hexdigest()

# –°–ª–æ–≤–∞—Ä—å –∞–¥–º–∏–Ω-–∫—Ä–µ–¥–æ–≤: {username: sha256(password)}
# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin / admin123
ADMIN_CREDENTIALS = {
    'admin': generate_password_hash('admin123'),
    'admin_user_id': 'admin_web'  # ID –¥–ª—è –≤–µ–±-–∞–¥–º–∏–Ω–∞
}

# –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∞–¥–º–∏–Ω–æ–≤:
# ADMIN_CREDENTIALS['superadmin'] = generate_password_hash('super_secret_password')
# ADMIN_CREDENTIALS['superadmin_user_id'] = 'admin_super'

def save_admin_credentials(username: str, password_hash: str):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ñ–∞–π–ª"""
    import json
    import os
    
    credentials_file = 'web_credentials.json'
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    if os.path.exists(credentials_file):
        try:
            with open(credentials_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
        except:
            data = {}
    else:
        data = {}
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    data[username] = {
        'password_hash': password_hash,
        'user_id': f'{username}_web',
        'created_at': dt.now().strftime('%Y-%m-%d %H:%M:%S')
    }
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    with open(credentials_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    
    print(f"‚úÖ –í–µ–±-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {credentials_file}")

def load_admin_credentials():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞"""
    import json
    import os
    
    credentials_file = 'web_credentials.json'
    
    if os.path.exists(credentials_file):
        try:
            with open(credentials_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ADMIN_CREDENTIALS
            for username, creds in data.items():
                ADMIN_CREDENTIALS[username] = creds['password_hash']
                ADMIN_CREDENTIALS[f'{username}_user_id'] = creds['user_id']
            
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} –≤–µ–±-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ {credentials_file}")
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ–±-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —É—á—ë—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
load_admin_credentials()

print(f"‚ÑπÔ∏è  –í–µ–±-–∞–¥–º–∏–Ω –ª–æ–≥–∏–Ω: admin / admin123 (–∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤ config.py!)")

