#!/usr/bin/env python3
"""
üßπ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –†–ï–û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ü–†–û–ï–ö–¢–ê
–ù–∞–≤–æ–¥–∏–º –ø–æ—Ä—è–¥–æ–∫: —Ä–∞–∑–¥–µ–ª—è–µ–º –±–æ—Ç –∏ –≤–µ–±, —É–¥–∞–ª—è–µ–º –º—É—Å–æ—Ä
"""
import os
import shutil
import json
from datetime import datetime

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
class Colors:
    GREEN = '\033[92m'
    RED = '\033[91m'
    YELLOW = '\033[93m'
    BLUE = '\033[94m'
    END = '\033[0m'

def print_step(msg):
    print(f"\n{Colors.BLUE}{'='*70}{Colors.END}")
    print(f"{Colors.BLUE}{msg}{Colors.END}")
    print(f"{Colors.BLUE}{'='*70}{Colors.END}\n")

def print_success(msg):
    print(f"{Colors.GREEN}‚úì{Colors.END} {msg}")

def print_warning(msg):
    print(f"{Colors.YELLOW}‚ö†{Colors.END} {msg}")

def print_error(msg):
    print(f"{Colors.RED}‚úó{Colors.END} {msg}")

# –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
def create_backup():
    print_step("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")
    
    backup_name = f"backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    
    if os.path.exists(backup_name):
        print_warning(f"–ë—ç–∫–∞–ø {backup_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
        return backup_name
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        important_files = [
            'bot_data.json', 'users_data.json', 'chat_data.json',
            'ven_bot.json', 'config.py', 'smtp_config.json'
        ]
        
        os.makedirs(backup_name)
        
        for file in important_files:
            if os.path.exists(file):
                shutil.copy2(file, backup_name)
                print_success(f"–°–æ—Ö—Ä–∞–Ω—ë–Ω: {file}")
        
        print_success(f"–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: {backup_name}/")
        return backup_name
    
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞: {e}")
        return None

# –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
def create_structure():
    print_step("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫")
    
    folders = [
        'bot',
        'web',
        'web/static',
        'web/static/css',
        'web/static/js',
        'web/templates',
        'config',
        'data',
        'photos/temp',
        'scripts',
        'docs',
        'archive'  # –î–ª—è —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    ]
    
    for folder in folders:
        try:
            os.makedirs(folder, exist_ok=True)
            print_success(f"–°–æ–∑–¥–∞–Ω–∞: {folder}/")
        except Exception as e:
            print_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å {folder}: {e}")

# –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã –±–æ—Ç–∞
def move_bot_files():
    print_step("ü§ñ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –±–æ—Ç–∞")
    
    bot_files = {
        'bot.py': 'bot/bot.py',
        'commands.py': 'bot/commands.py',
        'commands_handlers.py': 'bot/commands_handlers.py',
        'chat_manager.py': 'bot/chat_manager.py',
        'dse_manager.py': 'bot/dse_manager.py',
        'dse_watcher.py': 'bot/dse_watcher.py',
        'user_manager.py': 'bot/user_manager.py',
        'email_manager.py': 'bot/email_manager.py',
        'gui_manager.py': 'bot/gui_manager.py',
        'pdf_generator.py': 'bot/pdf_generator.py',
    }
    
    for src, dst in bot_files.items():
        if os.path.exists(src):
            try:
                shutil.move(src, dst)
                print_success(f"{src} ‚Üí {dst}")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {src}: {e}")
        else:
            print_warning(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {src}")

# –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã –≤–µ–±–∞
def move_web_files():
    print_step("üåê –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    
    # –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
    if os.path.exists('web_app.py'):
        shutil.move('web_app.py', 'web/web_app.py')
        print_success("web_app.py ‚Üí web/web_app.py")
    
    # Static —Ñ–∞–π–ª—ã
    if os.path.exists('static'):
        if os.path.exists('web/static'):
            shutil.rmtree('web/static')
        shutil.move('static', 'web/static')
        print_success("static/ ‚Üí web/static/")
    
    # Templates
    if os.path.exists('templates'):
        if os.path.exists('web/templates'):
            shutil.rmtree('web/templates')
        shutil.move('templates', 'web/templates')
        print_success("templates/ ‚Üí web/templates/")

# –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
def move_config_files():
    print_step("‚öôÔ∏è –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    
    config_files = {
        'config.py': 'config/config.py',
        'ven_bot.json': 'config/ven_bot.json',
        'ven_bot.json.example': 'config/ven_bot.json.example',
        'smtp_config.json': 'config/smtp_config.json',
        'smtp_config.json.example': 'config/smtp_config.json.example',
    }
    
    for src, dst in config_files.items():
        if os.path.exists(src):
            try:
                shutil.move(src, dst)
                print_success(f"{src} ‚Üí {dst}")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {src}: {e}")

# –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
def move_data_files():
    print_step("üíæ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö")
    
    data_files = {
        'bot_data.json': 'data/bot_data.json',
        'users_data.json': 'data/users_data.json',
        'chat_data.json': 'data/chat_data.json',
        'watched_dse.json': 'data/watched_dse.json',
    }
    
    for src, dst in data_files.items():
        if os.path.exists(src):
            try:
                shutil.move(src, dst)
                print_success(f"{src} ‚Üí {dst}")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {src}: {e}")

# –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
def move_scripts():
    print_step("üõ†Ô∏è –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤")
    
    scripts = [
        'server_check.py',
        'check_dse_id.py',
        'diagnose_dse.py',
        'emergency_check.py',
        'clear_logs.py',
        'restart_web.sh',
        'start_bot.sh',
        'install.sh',
        'setup.sh',
        'show_users_roles.py',
    ]
    
    for script in scripts:
        if os.path.exists(script):
            try:
                dst = f'scripts/{script}'
                shutil.move(script, dst)
                print_success(f"{script} ‚Üí scripts/")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {script}: {e}")

# –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
def move_docs():
    print_step("üìö –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
    
    docs = [
        'README.md',
        'INSTALLATION.md',
        'TROUBLESHOOTING.md',
        'QUICK_FIX.md',
    ]
    
    for doc in docs:
        if os.path.exists(doc):
            try:
                # README –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ
                if doc == 'README.md':
                    continue
                dst = f'docs/{doc}'
                shutil.move(doc, dst)
                print_success(f"{doc} ‚Üí docs/")
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {doc}: {e}")

# –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
def archive_old_files():
    print_step("üóëÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤")
    
    old_files = [
        # –î—É–±–ª–∏–∫–∞—Ç—ã
        'add-pdf-menu-function.sh',
        'apply-fixes.ps1', 'apply-fixes.sh',
        'cleanup-bot.sh', 'cleanup-docs.ps1', 'cleanup-docs.sh',
        'deploy_fixes.ps1',
        'fix-502.sh', 'fix_server.sh',
        'quick_fix.sh',
        'diagnose-web.sh',
        'restructure.sh',
        'reorganize.ps1',
        'update_imports.py',
        'migrate_add_photo_field.py',
        
        # –°—Ç–∞—Ä–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        'CHEATSHEET.md',
        'DOCKER_TROUBLESHOOTING.md',
        'FIXES_APPLIED.md',
        'FIX_502.md', 'FIX_HTTPS.md', 'FIX_MONITOR_BLACK_SCREEN.md',
        'HTTPS_QUICK_SETUP.txt', 'HTTPS_SETUP.md',
        'MONITOR.md', 'MONITOR_README.md', 'MONITOR_QUICKSTART.md',
        'MONITOR_TESTING.md', 'MONITOR_HTOP_GUIDE.md',
        'QUICKSTART_REORGANIZATION.md',
        'REORGANIZATION_GUIDE.md',
        'ROLE_MANAGEMENT_GUIDE.md',
        'test_role_management.md',
        'HELP_EMERGENCY.txt',
        
        # –¢–µ—Å—Ç—ã
        'test_report.pdf',
        'test_monitor_data.py',
        'RezultBot.xlsx',
        'genereteTabl.py',
        
        # Monitor —Ñ–∞–π–ª—ã
        'monitor.py',
        'monitor_cheatsheet.sh',
        'monitor_integration.py',
        'start_monitor.sh',
        
        # Nginx
        'nginx-ssl.conf',
        'nginx.conf',
        'setup-https.sh',
        'setup-ssl-quick.sh',
        
        # Systemd
        'telegrambot.service',
        
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
        'check_installation.sh',
        'restart-bot.sh',
        'setup_minimal.sh',
        'show-web-url.sh',
        
        # Windows
        'windows_service.py',
        'installer.nsi',
        'start_bot.bat',
        'run_web_dev.ps1',
    ]
    
    archived = 0
    for file in old_files:
        if os.path.exists(file):
            try:
                dst = f'archive/{file}'
                shutil.move(file, dst)
                print_success(f"{file} ‚Üí archive/")
                archived += 1
            except Exception as e:
                print_error(f"–û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è {file}: {e}")
    
    print(f"\nüì¶ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {archived}")

# –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π README
def create_new_readme():
    print_step("üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ README.md")
    
    readme_content = """# TelegrammBolt - Telegram Bot + Web Interface

–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –î–°–ï —Å Telegram –±–æ—Ç–æ–º –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
TelegrammBolt/
‚îú‚îÄ‚îÄ bot/                    # Telegram –±–æ—Ç
‚îú‚îÄ‚îÄ web/                    # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (Flask)
‚îú‚îÄ‚îÄ config/                 # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îú‚îÄ‚îÄ data/                   # –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
‚îú‚îÄ‚îÄ photos/                 # –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚îú‚îÄ‚îÄ scripts/                # –£—Ç–∏–ª–∏—Ç—ã –∏ —Å–∫—Ä–∏–ø—Ç—ã
‚îî‚îÄ‚îÄ docs/                   # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
pip install -r requirements.txt
```

### 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞
```bash
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ example —Ñ–∞–π–ª—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ
cp config/ven_bot.json.example config/ven_bot.json
# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/ven_bot.json - –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
```

### 3. –ó–∞–ø—É—Å–∫

**Telegram –±–æ—Ç:**
```bash
cd bot
python bot.py
```

**–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:**
```bash
cd web
python web_app.py
```

## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

- [–£—Å—Ç–∞–Ω–æ–≤–∫–∞](docs/INSTALLATION.md) - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
- [–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º](docs/TROUBLESHOOTING.md) - –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–µ—à–µ–Ω–∏—è
- [–ë—ã—Å—Ç—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è](docs/QUICK_FIX.md) - –ë—ã—Å—Ç—Ä—ã–µ —Ä–µ—à–µ–Ω–∏—è —Ç–∏–ø–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º

## üõ†Ô∏è –£—Ç–∏–ª–∏—Ç—ã

–í –ø–∞–ø–∫–µ `scripts/` –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:

- `server_check.py` - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
- `check_dse_id.py` - –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ ID
- `diagnose_dse.py` - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
- `emergency_check.py` - –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

## üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–æ—Ç–∞ (bot/)
- `bot.py` - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
- `commands.py` - –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
- `dse_manager.py` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏
- `user_manager.py` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–µ–±–∞ (web/)
- `web_app.py` - Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
- `static/` - CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
- `templates/` - HTML —à–∞–±–ª–æ–Ω—ã

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: `python scripts/emergency_check.py`
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
3. –°–º. [TROUBLESHOOTING.md](docs/TROUBLESHOOTING.md)

## üìù –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License
"""
    
    try:
        with open('README.md', 'w', encoding='utf-8') as f:
            f.write(readme_content)
        print_success("README.md —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è README: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    print("\n" + "="*70)
    print("üßπ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –†–ï–û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ü–†–û–ï–ö–¢–ê")
    print("="*70)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    if not os.path.exists('bot.py'):
        print_error("–û—à–∏–±–∫–∞: bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞.")
        return
    
    print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï!")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:")
    print("  1. –°–æ–∑–¥–∞—Å—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    print("  2. –°–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫")
    print("  3. –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç —Ñ–∞–π–ª—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
    print("  4. –ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–∞–π–ª—ã")
    print("")
    
    response = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ").strip().lower()
    if response != 'yes':
        print("–û—Ç–º–µ–Ω–µ–Ω–æ.")
        return
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    try:
        create_backup()
        create_structure()
        move_bot_files()
        move_web_files()
        move_config_files()
        move_data_files()
        move_scripts()
        move_docs()
        archive_old_files()
        create_new_readme()
        
        print_step("‚úÖ –†–ï–û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:")
        print("   ls -la bot/ web/ config/ data/ scripts/")
        print("")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ –ø—É—Ç–∏ –∏–º–ø–æ—Ä—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):")
        print("   python scripts/update_imports.py")
        print("")
        print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ:")
        print("   cd bot && python bot.py")
        print("   cd web && python web_app.py")
        print("")
        print("4. –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –≤ archive/ (–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–∑–∂–µ)")
        print("")
        print("‚ú® –ü—Ä–æ–µ–∫—Ç —Ç–µ–ø–µ—Ä—å –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω –∏ —á–∏—Å—Ç!")
        
    except Exception as e:
        print_error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
