#!/bin/bash#!/bin/bash#!/bin/bash#!/bin/bash

#

# –£–°–¢–ê–ù–û–í–©–ò–ö TelegrammBolt –¥–ª—è Linux/Ubuntu#

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ + –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

## üöÄ –£–°–¢–ê–ù–û–í–©–ò–ö TelegrammBolt –¥–ª—è Linux/Ubuntu#################################################################################



set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ + –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞



# ============================================## üöÄ –£–°–¢–ê–ù–û–í–©–ò–ö TelegrammBolt –¥–ª—è Linux/Ubuntu# TelegrammBolt - –ü–æ–ª–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞

# ============================================

RED='\033[0;31m'

GREEN='\033[0;32m'set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ + –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞# –í–µ—Ä—Å–∏—è: 2.0

YELLOW='\033[1;33m'

BLUE='\033[0;34m'

NC='\033[0m'

# ============================================## –ê–≤—Ç–æ—Ä: Nickto55

# ============================================

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞

# ============================================

print_header() {# ============================================# –î–∞—Ç–∞: 17 –æ–∫—Ç—è–±—Ä—è 2025

    echo ""

    echo -e "${BLUE}======================================================================${NC}"RED='\033[0;31m'

    echo -e "${BLUE}  $1${NC}"

    echo -e "${BLUE}======================================================================${NC}"GREEN='\033[0;32m'set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ################################################################################

    echo ""

}YELLOW='\033[1;33m'



print_success() {BLUE='\033[0;34m'

    echo -e "${GREEN}[OK]${NC} $1"

}NC='\033[0m'



print_error() {# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

    echo -e "${RED}[ERROR]${NC} $1"

}# ============================================



print_warning() {# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞RED='\033[0;31m'

    echo -e "${YELLOW}[WARN]${NC} $1"

}# ============================================



print_info() {print_header() {GREEN='\033[0;32m'# ============================================

    echo -e "${BLUE}[INFO]${NC} $1"

}    echo ""



# ============================================    echo -e "${BLUE}======================================================================${NC}"YELLOW='\033[1;33m'# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞

# ============================================    echo -e "${BLUE}  $1${NC}"

if [ ! -d "bot" ] || [ ! -d "web" ]; then

    print_error "–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞!"    echo -e "${BLUE}======================================================================${NC}"BLUE='\033[0;34m'# ============================================

    print_info "–î–æ–ª–∂–Ω—ã —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞–ø–∫–∏: bot/ –∏ web/"

    exit 1    echo ""

fi

}NC='\033[0m' # No ColorRED='\033[0;31m'

print_header "TelegrammBolt - –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–ª—è Linux"



# ============================================

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Pythonprint_success() {GREEN='\033[0;32m'

# ============================================

print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python"    echo -e "${GREEN}‚úì${NC} $1"



if ! command -v python3 &> /dev/null; then}# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞YELLOW='\033[1;33m'

    print_error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"

    print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install python3 python3-pip python3-venv"

    exit 1

fiprint_error() {print_header() {BLUE='\033[0;34m'



PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)    echo -e "${RED}‚úó${NC} $1"

print_success "Python $PYTHON_VERSION —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

}    echo ""CYAN='\033[0;36m'

# ============================================

# 2. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

# ============================================

print_header "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"print_warning() {    echo -e "${BLUE}======================================================================${NC}"PURPLE='\033[0;35m'



if [ ! -d ".venv" ]; then    echo -e "${YELLOW}‚ö†${NC} $1"

    print_info "–°–æ–∑–¥–∞—é .venv..."

    python3 -m venv .venv}    echo -e "${BLUE}$1${NC}"NC='\033[0m' # No Color

    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"

else

    print_info ".venv —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

fiprint_info() {    echo -e "${BLUE}======================================================================${NC}"



# –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv    echo -e "${BLUE}‚Ñπ${NC} $1"

source .venv/bin/activate

print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"}    echo ""# ============================================



# ============================================

# 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip

# ============================================# ============================================}# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞

print_header "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"

pip install --upgrade pip --quiet# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞

print_success "pip –æ–±–Ω–æ–≤–ª—ë–Ω"

# ============================================# ============================================

# ============================================

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–πif [ ! -d "bot" ] || [ ! -d "web" ]; then

# ============================================

print_header "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"    print_error "–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞!"print_success() {log() {



if [ -f "requirements.txt" ]; then    print_info "–î–æ–ª–∂–Ω—ã —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞–ø–∫–∏: bot/ –∏ web/"

    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–∫–µ—Ç—ã –∏–∑ requirements.txt..."

    pip install -r requirements.txt --quiet    exit 1    echo -e "${GREEN}‚úì${NC} $1"    echo -e "${BLUE}[INFO]${NC} $1"

    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

elsefi

    print_error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"

    exit 1}}

fi

print_header "TelegrammBolt - –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–ª—è Linux"

# ============================================

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π

# ============================================

print_header "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"# ============================================



mkdir -p data photos/temp config logs# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Pythonprint_error() {warn() {

print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: data/, photos/, config/, logs/"

# ============================================

# ============================================

# 6. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python"    echo -e "${RED}‚úó${NC} $1"    echo -e "${YELLOW}[WARN]${NC} $1"

# ============================================

print_header "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"



# config/ven_bot.jsonif ! command -v python3 &> /dev/null; then}}

if [ ! -f "config/ven_bot.json" ]; then

    print_info "–°–æ–∑–¥–∞—é config/ven_bot.json..."    print_error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"

    

    echo ""    print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install python3 python3-pip python3-venv"

    read -p "–í–≤–µ–¥–∏—Ç–µ BOT_TOKEN –æ—Ç @BotFather: " BOT_TOKEN

    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID (admin): " ADMIN_ID    exit 1

    

    if [ -z "$BOT_TOKEN" ]; thenfiprint_warning() {error() {

        BOT_TOKEN="YOUR_BOT_TOKEN_HERE"

        print_warning "–¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥—ë–Ω, —Å–æ–∑–¥–∞—é —Å –∑–∞–≥–ª—É—à–∫–æ–π"

    fi

    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)    echo -e "${YELLOW}‚ö†${NC} $1"    echo -e "${RED}[ERROR]${NC} $1"

    if [ -z "$ADMIN_ID" ]; then

        ADMIN_ID="123456789"print_success "Python $PYTHON_VERSION —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

        print_warning "ID –Ω–µ –≤–≤–µ–¥—ë–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É"

    fi}    exit 1

    

    cat > config/ven_bot.json <<EOF# ============================================

{

  "BOT_TOKEN": "$BOT_TOKEN",# 2. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è}

  "BOT_USERNAME": "@your_bot",

  "ADMIN_IDS": [$ADMIN_ID]# ============================================

}

EOFprint_header "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"print_info() {

    print_success "–°–æ–∑–¥–∞–Ω: config/ven_bot.json"

else

    print_info "config/ven_bot.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

fiif [ ! -d ".venv" ]; then    echo -e "${BLUE}‚Ñπ${NC} $1"success() {



# ============================================    print_info "–°–æ–∑–¥–∞—é .venv..."

# 7. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö

# ============================================    python3 -m venv .venv}    echo -e "${GREEN}[‚úì]${NC} $1"

print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö"

    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"

for file in bot_data.json users_data.json chat_data.json watched_dse.json; do

    if [ ! -f "data/$file" ]; thenelse}

        echo "{}" > "data/$file"

        print_success "–°–æ–∑–¥–∞–Ω: data/$file"    print_info ".venv —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

    else

        print_info "data/$file —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"fi# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞

    fi

done



# ============================================# –ê–∫—Ç–∏–≤–∞—Ü–∏—è venvif [ ! -d "bot" ] || [ ! -d "web" ]; thensection() {

# 8. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞

# ============================================source .venv/bin/activate

print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞"

print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"    print_error "–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞!"    echo ""

# start_bot.sh

cat > start_bot.sh <<'EOF'

#!/bin/bash

# –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ TelegrammBolt# ============================================    print_info "–î–æ–ª–∂–Ω—ã —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞–ø–∫–∏: bot/ –∏ web/"    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"



SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"# 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip

cd "$SCRIPT_DIR"

# ============================================    exit 1    echo -e "${CYAN}  $1${NC}"

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

if [ -d ".venv" ]; thenprint_header "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"

    source .venv/bin/activate

elif [ -d "venv" ]; thenpip install --upgrade pip --quietfi    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"

    source venv/bin/activate

fiprint_success "pip –æ–±–Ω–æ–≤–ª—ë–Ω"



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞    echo ""

echo "–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."

cd bot# ============================================

python3 bot.py

EOF# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–πprint_header "TelegrammBolt - –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–ª—è Linux"}



chmod +x start_bot.sh# ============================================

print_success "–°–æ–∑–¥–∞–Ω: start_bot.sh"

print_header "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"

# start_web.sh

cat > start_web.sh <<'EOF'

#!/bin/bash

# –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TelegrammBoltif [ -f "requirements.txt" ]; then# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Pythonprompt() {



SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–∫–µ—Ç—ã –∏–∑ requirements.txt..."

cd "$SCRIPT_DIR"

    pip install -r requirements.txt --quietprint_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python"    echo -e "${PURPLE}[?]${NC} $1"

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

if [ -d ".venv" ]; then    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

    source .venv/bin/activate

elif [ -d "venv" ]; thenelse}

    source venv/bin/activate

fi    print_error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"



# –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è    exit 1if ! command -v python3 &> /dev/null; then

echo "–ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."

cd webfi

python3 web_app.py

EOF    print_error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"# ============================================



chmod +x start_web.sh# ============================================

print_success "–°–æ–∑–¥–∞–Ω: start_web.sh"

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π    print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install python3 python3-pip python3-venv"# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

# ============================================

# 9. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ# ============================================

# ============================================

print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"print_header "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"    exit 1# ============================================



python3 -c "import telegram, flask, openpyxl, reportlab, nest_asyncio" 2>/dev/null

if [ $? -eq 0 ]; then

    print_success "–í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è"mkdir -p data photos/temp config logsfiBOT_DIR="/opt/telegrambot"

else

    print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: data/, photos/, config/, logs/"

fi

BOT_USER="telegrambot"

# ============================================

# 10. –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏# ============================================

# ============================================

print_header "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"# 6. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)SERVICE_FILE="/etc/systemd/system/telegrambot.service"



echo ""# ============================================

echo -e "${GREEN}–ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"

echo ""print_header "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"print_success "Python $PYTHON_VERSION —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"PYTHON_VERSION=""

echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"

echo "   nano config/ven_bot.json"

echo "   –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à BOT_TOKEN –æ—Ç @BotFather"

echo ""# config/ven_bot.jsonBOT_TOKEN=""

echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"

echo "   ./start_bot.sh"if [ ! -f "config/ven_bot.json" ]; then

echo "   –∏–ª–∏"

echo "   source .venv/bin/activate && cd bot && python3 bot.py"    print_info "–°–æ–∑–¥–∞—é config/ven_bot.json..."# 2. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—èADMIN_IDS=""

echo ""

echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"    

echo "   ./start_web.sh"

echo "   –∏–ª–∏"    echo ""print_header "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"SMTP_ENABLED="no"

echo "   source .venv/bin/activate && cd web && python3 web_app.py"

echo ""    read -p "$(echo -e ${YELLOW}–í–≤–µ–¥–∏—Ç–µ BOT_TOKEN –æ—Ç @BotFather: ${NC})" BOT_TOKEN

echo "4. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"

echo "   http://localhost:5000"    read -p "$(echo -e ${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID \(admin\): ${NC})" ADMIN_IDSMTP_SERVER=""

echo ""

echo -e "${BLUE}–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"    

echo "   README.md - –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"

echo "   UTILS.md - –£—Ç–∏–ª–∏—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"    if [ -z "$BOT_TOKEN" ]; thenif [ ! -d ".venv" ]; thenSMTP_PORT=""

echo ""

echo -e "${GREEN}–ì–æ—Ç–æ–≤–æ! –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã!${NC}"        BOT_TOKEN="YOUR_BOT_TOKEN_HERE"

echo ""

        print_warning "–¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥—ë–Ω, —Å–æ–∑–¥–∞—é —Å –∑–∞–≥–ª—É—à–∫–æ–π"    print_info "–°–æ–∑–¥–∞—é .venv..."SMTP_USER=""

    fi

        python3 -m venv .venvSMTP_PASSWORD=""

    if [ -z "$ADMIN_ID" ]; then

        ADMIN_ID="123456789"    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"WEB_ENABLED="yes"

        print_warning "ID –Ω–µ –≤–≤–µ–¥—ë–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É"

    fielseWEB_PORT="5000"

    

    cat > config/ven_bot.json <<EOF    print_info ".venv —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"HTTPS_ENABLED="no"

{

  "BOT_TOKEN": "$BOT_TOKEN",fiDOMAIN_NAME=""

  "BOT_USERNAME": "@your_bot",

  "ADMIN_IDS": [$ADMIN_ID]

}

EOF# –ê–∫—Ç–∏–≤–∞—Ü–∏—è venv# ============================================

    print_success "–°–æ–∑–¥–∞–Ω: config/ven_bot.json"

elsesource .venv/bin/activate# –ë–∞–Ω–Ω–µ—Ä

    print_info "config/ven_bot.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

fiprint_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"# ============================================



# ============================================show_banner() {

# 7. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö

# ============================================# 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip    clear

print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö"

print_header "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"    echo -e "${CYAN}"

for file in bot_data.json users_data.json chat_data.json watched_dse.json; do

    if [ ! -f "data/$file" ]; thenpip install --upgrade pip --quiet    cat << "EOF"

        echo "{}" > "data/$file"

        print_success "–°–æ–∑–¥–∞–Ω: data/$file"print_success "pip –æ–±–Ω–æ–≤–ª—ë–Ω"‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó

    else

        print_info "data/$file —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"‚ïë                                                               ‚ïë

    fi

done# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ïë



# ============================================print_header "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"‚ïë   ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó ‚ïë

# 8. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞

# ============================================‚ïë      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë ‚ïë

print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞"

if [ -f "requirements.txt" ]; then‚ïë      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë ‚ïë

# start_bot.sh

cat > start_bot.sh <<'EOF'    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–∫–µ—Ç—ã –∏–∑ requirements.txt..."‚ïë      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë ‚ïë

#!/bin/bash

# –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ TelegrammBolt    pip install -r requirements.txt --quiet‚ïë      ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïë



SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"‚ïë                                                               ‚ïë

cd "$SCRIPT_DIR"

else‚ïë             TELEGRAMMBOLT - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫         ‚ïë

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

if [ -d ".venv" ]; then    print_error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"‚ïë                         –í–µ—Ä—Å–∏—è 2.0                            ‚ïë

    source .venv/bin/activate

elif [ -d "venv" ]; then    exit 1‚ïë                                                               ‚ïë

    source venv/bin/activate

fifi‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞EOF

echo "ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."

cd bot# 5. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π    echo -e "${NC}"

python3 bot.py

EOFprint_header "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"    echo ""



chmod +x start_bot.sh}

print_success "–°–æ–∑–¥–∞–Ω: start_bot.sh"

mkdir -p data photos/temp config logs

# start_web.sh

cat > start_web.sh <<'EOF'print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: data/, photos/, config/, logs/"# ============================================

#!/bin/bash

# –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TelegrammBolt# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root



SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"# 6. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤# ============================================

cd "$SCRIPT_DIR"

print_header "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"check_root() {

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

if [ -d ".venv" ]; then    if [[ $EUID -ne 0 ]]; then

    source .venv/bin/activate

elif [ -d "venv" ]; then# config/ven_bot.json        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ sudo)"

    source venv/bin/activate

fiif [ ! -f "config/ven_bot.json" ]; then    fi



# –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è    print_info "–°–æ–∑–¥–∞—é config/ven_bot.json..."}

echo "üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."

cd web    

python3 web_app.py

EOF    echo ""# ============================================



chmod +x start_web.sh    read -p "$(echo -e ${YELLOW}–í–≤–µ–¥–∏—Ç–µ BOT_TOKEN –æ—Ç @BotFather: ${NC})" BOT_TOKEN# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã

print_success "–°–æ–∑–¥–∞–Ω: start_web.sh"

    read -p "$(echo -e ${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID \(admin\): ${NC})" ADMIN_ID# ============================================

# ============================================

# 9. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ    check_system() {

# ============================================

print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"    if [ -z "$BOT_TOKEN" ]; then    section "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"



python3 -c "import telegram, flask, openpyxl, reportlab, nest_asyncio" 2>/dev/null        BOT_TOKEN="YOUR_BOT_TOKEN_HERE"    

if [ $? -eq 0 ]; then

    print_success "–í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è"        print_warning "–¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥—ë–Ω, —Å–æ–∑–¥–∞—é —Å –∑–∞–≥–ª—É—à–∫–æ–π"    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."

else

    print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"    fi    

fi

        if ! command -v lsb_release &> /dev/null; then

# ============================================

# 10. –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏    if [ -z "$ADMIN_ID" ]; then        warn "lsb_release –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."

# ============================================

print_header "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"        ADMIN_ID="123456789"        apt-get update -qq



echo ""        print_warning "ID –Ω–µ –≤–≤–µ–¥—ë–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É"        apt-get install -y lsb-release

echo -e "${GREEN}–ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"

echo ""    fi    fi

echo "1Ô∏è‚É£  –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"

echo -e "   ${YELLOW}nano config/ven_bot.json${NC}"        

echo "   –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à BOT_TOKEN –æ—Ç @BotFather"

echo ""    cat > config/ven_bot.json <<EOF    DISTRIB=$(lsb_release -si)

echo "2Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"

echo -e "   ${YELLOW}./start_bot.sh${NC}"{    VERSION=$(lsb_release -sr)

echo "   –∏–ª–∏"

echo -e "   ${YELLOW}source .venv/bin/activate && cd bot && python3 bot.py${NC}"  "BOT_TOKEN": "$BOT_TOKEN",    

echo ""

echo "3Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"  "BOT_USERNAME": "@your_bot",    success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞: $DISTRIB $VERSION"

echo -e "   ${YELLOW}./start_web.sh${NC}"

echo "   –∏–ª–∏"  "ADMIN_IDS": [$ADMIN_ID]    

echo -e "   ${YELLOW}source .venv/bin/activate && cd web && python3 web_app.py${NC}"

echo ""}    if [[ "$DISTRIB" != "Ubuntu" && "$DISTRIB" != "Debian" ]]; then

echo "4Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"

echo -e "   ${BLUE}http://localhost:5000${NC}"EOF        error "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ Ubuntu –∏ Debian. –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: $DISTRIB"

echo ""

echo -e "${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"    print_success "–°–æ–∑–¥–∞–Ω: config/ven_bot.json"    fi

echo "   README.md - –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"

echo "   UTILS.md - –£—Ç–∏–ª–∏—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"else    

echo ""

echo -e "${GREEN}‚ú® –ì–æ—Ç–æ–≤–æ! –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã! ‚ú®${NC}"    print_info "config/ven_bot.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker

echo ""

fi    if [ -f /.dockerenv ] || grep -q docker /proc/1/cgroup 2>/dev/null; then

        warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ"

# 7. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö        DOCKER_ENV=true

print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö"    else

        DOCKER_ENV=false

for file in bot_data.json users_data.json chat_data.json watched_dse.json; do    fi

    if [ ! -f "data/$file" ]; then}

        echo "{}" > "data/$file"

        print_success "–°–æ–∑–¥–∞–Ω: data/$file"# ============================================

    else# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python

        print_info "data/$file —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"# ============================================

    ficheck_python() {

done    section "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python"

    

# 8. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞    if ! command -v python3 &> /dev/null; then

print_header "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞"        error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9+"

    fi

# start_bot.sh    

cat > start_bot.sh <<'EOF'    PYTHON_VERSION=$(python3 --version 2>&1 | awk '{print $2}')

#!/bin/bash    PYTHON_MAJOR=$(echo $PYTHON_VERSION | cut -d. -f1)

# –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ TelegrammBolt    PYTHON_MINOR=$(echo $PYTHON_VERSION | cut -d. -f2)

    

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"    success "Python –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"

cd "$SCRIPT_DIR"    

    if [[ $PYTHON_MAJOR -lt 3 ]] || [[ $PYTHON_MAJOR -eq 3 && $PYTHON_MINOR -lt 9 ]]; then

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è        error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.9+. –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ: $PYTHON_VERSION"

if [ -d ".venv" ]; then    fi

    source .venv/bin/activate    

elif [ -d "venv" ]; then    if [[ $PYTHON_MAJOR -eq 3 && $PYTHON_MINOR -ge 13 ]]; then

    source venv/bin/activate        warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω Python 3.13+. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏."

fi        warn "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Python 3.11 –∏–ª–∏ 3.12"

        sleep 2

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞    fi

echo "ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."}

cd bot

python3 bot.py# ============================================

EOF# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã

# ============================================

chmod +x start_bot.shupdate_system() {

print_success "–°–æ–∑–¥–∞–Ω: start_bot.sh"    section "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"

    

# start_web.sh    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."

cat > start_web.sh <<'EOF'    apt-get update -qq

#!/bin/bash    

# –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TelegrammBolt    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    apt-get install -y -qq \

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"        python3 \

cd "$SCRIPT_DIR"        python3-pip \

        python3-venv \

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è        git \

if [ -d ".venv" ]; then        curl \

    source .venv/bin/activate        wget \

elif [ -d "venv" ]; then        unzip \

    source venv/bin/activate        build-essential \

fi        nginx \

        certbot \

# –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è        python3-certbot-nginx \

echo "üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."        jq

cd web    

python3 web_app.py    success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

EOF}



chmod +x start_web.sh# ============================================

print_success "–°–æ–∑–¥–∞–Ω: start_web.sh"# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - Bot Token

# ============================================

# 9. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µconfigure_bot_token() {

print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"    section "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –ë–æ—Ç–∞"

    

python3 -c "import telegram, flask, openpyxl, reportlab, nest_asyncio" 2>/dev/null    echo ""

if [ $? -eq 0 ]; then    log "–î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –Ω—É–∂–µ–Ω —Ç–æ–∫–µ–Ω –æ—Ç @BotFather"

    print_success "–í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è"    log "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω:"

else    echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram"

    print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"    echo "  2. –ù–∞–π–¥–∏—Ç–µ @BotFather"

fi    echo "  3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /newbot"

    echo "  4. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º"

# 10. –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏    echo "  5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω (—Ñ–æ—Ä–º–∞—Ç: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz)"

print_header "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"    echo ""

    

echo ""    while true; do

echo -e "${GREEN}–ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"        echo ""

echo ""        echo -ne "${PURPLE}[?]${NC} –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: "

echo "1Ô∏è‚É£  –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"        read -r BOT_TOKEN

echo -e "   ${YELLOW}nano config/ven_bot.json${NC}"        

echo "   –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à BOT_TOKEN –æ—Ç @BotFather"        # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ

echo ""        BOT_TOKEN=$(echo "$BOT_TOKEN" | xargs)

echo "2Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"        

echo -e "   ${YELLOW}./start_bot.sh${NC}"        if [[ -z "$BOT_TOKEN" ]]; then

echo "   –∏–ª–∏"            error "–¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"

echo -e "   ${YELLOW}source .venv/bin/activate && cd bot && python3 bot.py${NC}"            continue

echo ""        fi

echo "3Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"        

echo -e "   ${YELLOW}./start_web.sh${NC}"        # –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–∫–µ–Ω–∞

echo "   –∏–ª–∏"        if [[ ! "$BOT_TOKEN" =~ ^[0-9]+:[A-Za-z0-9_-]+$ ]]; then

echo -e "   ${YELLOW}source .venv/bin/activate && cd web && python3 web_app.py${NC}"            warn "–¢–æ–∫–µ–Ω –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!"

echo ""            warn "–û–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz"

echo "4Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"            echo -ne "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —ç—Ç–∏–º —Ç–æ–∫–µ–Ω–æ–º? (y/n): "

echo -e "   ${BLUE}http://localhost:5000${NC}"            read -r -n 1 REPLY

echo ""            echo

echo -e "${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"            if [[ $REPLY =~ ^[Yy]$ ]]; then

echo "   README.md - –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"                break

echo "   UTILS.md - –£—Ç–∏–ª–∏—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"            fi

echo "   SECURITY.md - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"        else

echo ""            success "–¢–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç"

echo -e "${GREEN}‚ú® –ì–æ—Ç–æ–≤–æ! –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã! ‚ú®${NC}"            break

echo ""        fi

    done
}

# ============================================
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - Admin IDs
# ============================================
configure_admin_ids() {
    echo ""
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞"
    log "–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π Telegram ID:"
    echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram"
    echo "  2. –ù–∞–π–¥–∏—Ç–µ @userinfobot"
    echo "  3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /start"
    echo "  4. –ë–æ—Ç –ø—Ä–∏—à–ª–µ—Ç –≤–∞—à ID (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789)"
    echo ""
    
    while true; do
        echo ""
        echo -ne "${PURPLE}[?]${NC} –í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞(–æ–≤) —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: "
        read -r ADMIN_IDS
        
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
        ADMIN_IDS=$(echo "$ADMIN_IDS" | xargs)
        
        if [[ -z "$ADMIN_IDS" ]]; then
            error "–ù—É–∂–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!"
            continue
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
        if [[ "$ADMIN_IDS" =~ ^[0-9,\ ]+$ ]]; then
            success "ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: $ADMIN_IDS"
            break
        else
            warn "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –∑–∞–ø—è—Ç—ã–µ."
        fi
    done
}

# ============================================
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - SMTP (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# ============================================
configure_smtp() {
    section "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
    
    echo ""
    log "Email –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤"
    echo ""
    
    echo -ne "${PURPLE}[?]${NC} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Email? (y/n): "
    read -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        SMTP_ENABLED="yes"
        
        echo ""
        echo -ne "SMTP —Å–µ—Ä–≤–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä: smtp.gmail.com): "
        read -r SMTP_SERVER
        
        echo -ne "SMTP –ø–æ—Ä—Ç (–æ–±—ã—á–Ω–æ 587): "
        read -r SMTP_PORT
        SMTP_PORT=${SMTP_PORT:-587}
        
        echo -ne "Email –∞–¥—Ä–µ—Å: "
        read -r SMTP_USER
        
        echo -ne "Email –ø–∞—Ä–æ–ª—å: "
        read -r -s SMTP_PASSWORD
        echo ""
        
        success "SMTP –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        log "SMTP –ø—Ä–æ–ø—É—â–µ–Ω. –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∑–∂–µ –≤ config/smtp_config.json"
    fi
}

# ============================================
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
# ============================================
configure_web() {
    section "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
    
    echo ""
    echo -ne "${PURPLE}[?]${NC} –í–∫–ª—é—á–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å? (Y/n): "
    read -n 1 -r
    echo
    
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        WEB_ENABLED="yes"
        
        echo ""
        echo -ne "–ü–æ—Ä—Ç –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5000): "
        read -r WEB_PORT
        WEB_PORT=${WEB_PORT:-5000}
        
        success "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $WEB_PORT"
        
        # HTTPS
        echo ""
        log "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        log "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        echo ""
        log "–í–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL/HTTPS:"
        echo ""
        echo "  1. Let's Encrypt (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–º–µ–Ω)"
        echo "     ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
        echo "     ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è (example.com)"
        echo "     ‚Ä¢ DNS –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
        echo ""
        echo "  2. –°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
        echo "     ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –¥–æ–º–µ–Ω–∞"
        echo "     ‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        echo "     ‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
        echo ""
        echo "  3. –ë–µ–∑ HTTPS (—Ç–æ–ª—å–∫–æ HTTP)"
        echo "     ‚Ä¢ –ë–µ–∑ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è"
        echo "     ‚Ä¢ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏"
        echo ""
        log "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã: DuckDNS (duckdns.org), No-IP (noip.com)"
        echo ""
        
        echo -ne "${PURPLE}[?]${NC} –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-Let's Encrypt / 2-–°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π / N-–ë–µ–∑ HTTPS): "
        read -r HTTPS_CHOICE
        
        case "${HTTPS_CHOICE}" in
            1)
                HTTPS_ENABLED="letsencrypt"
                echo ""
                echo -ne "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: bot.example.com): "
                read -r DOMAIN_NAME
                
                if [[ -z "$DOMAIN_NAME" ]]; then
                    warn "–î–æ–º–µ–Ω–Ω–æ–µ –∏–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ. HTTPS –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω."
                    HTTPS_ENABLED="no"
                else
                    success "Let's Encrypt –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $DOMAIN_NAME"
                fi
                ;;
            2)
                HTTPS_ENABLED="selfsigned"
                echo ""
                log "–ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
                warn "‚ö†Ô∏è  –ë—Ä–∞—É–∑–µ—Ä –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
                log "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
                success "–°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω"
                ;;
            *)
                HTTPS_ENABLED="no"
                log "HTTPS –æ—Ç–∫–ª—é—á–µ–Ω. –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP"
                ;;
        esac
    else
        WEB_ENABLED="no"
        log "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∫–ª—é—á–µ–Ω"
    fi
}

# ============================================
# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# ============================================
create_bot_user() {
    section "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    if ! id "$BOT_USER" &>/dev/null; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $BOT_USER..."
        useradd --system --shell /bin/bash --home "$BOT_DIR" --create-home "$BOT_USER"
        success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $BOT_USER —Å–æ–∑–¥–∞–Ω"
    else
        log "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $BOT_USER —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# ============================================
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
# ============================================
clone_repository() {
    section "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤"
    
    local repo_url="https://github.com/Nickto55/TelegrammBolt.git"
    
    if [ -d "$BOT_DIR/.git" ]; then
        log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        cd "$BOT_DIR"
        sudo -u "$BOT_USER" git pull
    else
        log "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        rm -rf "$BOT_DIR"
        git clone "$repo_url" "$BOT_DIR"
        chown -R "$BOT_USER:$BOT_USER" "$BOT_DIR"
    fi
    
    success "–§–∞–π–ª—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ $BOT_DIR"
}

# ============================================
# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
# ============================================
create_config_files() {
    section "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    
    cd "$BOT_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    mkdir -p data
    mkdir -p data/photos
    
    # ven_bot.json
    log "–°–æ–∑–¥–∞–Ω–∏–µ data/ven_bot.json..."
    cat > data/ven_bot.json << EOF
{
    "bot_token": "$BOT_TOKEN",
    "admin_ids": [$(echo $ADMIN_IDS | sed 's/,/, /g')],
    "web_enabled": $([ "$WEB_ENABLED" == "yes" ] && echo "true" || echo "false"),
    "web_port": $WEB_PORT,
    "data_file": "data/bot_data.json",
    "users_file": "data/users_data.json",
    "photos_dir": "data/photos",
    "debug": false
}
EOF
    
    chown "$BOT_USER:$BOT_USER" data/ven_bot.json
    chmod 600 data/ven_bot.json
    success "–ö–æ–Ω—Ñ–∏–≥ –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω"
    
    # smtp_config.json (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
    if [ "$SMTP_ENABLED" == "yes" ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ data/smtp_config.json..."
        cat > data/smtp_config.json << EOF
{
    "smtp_server": "$SMTP_SERVER",
    "smtp_port": $SMTP_PORT,
    "smtp_user": "$SMTP_USER",
    "smtp_password": "$SMTP_PASSWORD",
    "from_email": "$SMTP_USER",
    "use_tls": true
}
EOF
        chown "$BOT_USER:$BOT_USER" data/smtp_config.json
        chmod 600 data/smtp_config.json
        success "SMTP –∫–æ–Ω—Ñ–∏–≥ —Å–æ–∑–¥–∞–Ω"
    fi
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö JSON —Ñ–∞–π–ª–æ–≤
    echo '{}' > data/bot_data.json
    echo '{}' > data/users_data.json
    chown -R "$BOT_USER:$BOT_USER" data/
    
    success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# ============================================
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
# ============================================
setup_python_env() {
    section "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    
    cd "$BOT_DIR"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ ! -d ".venv" ]; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        sudo -u "$BOT_USER" python3 -m venv .venv
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
    sudo -u "$BOT_USER" .venv/bin/pip install --upgrade pip --quiet
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)..."
    if sudo -u "$BOT_USER" .venv/bin/pip install -r requirements.txt --quiet; then
        success "Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ requirements.txt"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    local tg_version=$(sudo -u "$BOT_USER" .venv/bin/pip list | grep python-telegram-bot | awk '{print $2}')
    if [ ! -z "$tg_version" ]; then
        success "python-telegram-bot: v$tg_version"
    fi
}

# ============================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω –≤–µ–±)
# ============================================
configure_nginx() {
    if [ "$WEB_ENABLED" != "yes" ]; then
        return 0
    fi
    
    section "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx"
    
    local nginx_config="/etc/nginx/sites-available/telegrambot"
    local nginx_enabled="/etc/nginx/sites-enabled/telegrambot"
    
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
    
    cat > "$nginx_config" << EOF
server {
    listen 80;
    server_name ${DOMAIN_NAME:-_};

    location / {
        proxy_pass http://127.0.0.1:$WEB_PORT;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF
    
    # –í–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–π—Ç–∞
    ln -sf "$nginx_config" "$nginx_enabled"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ default —Å–∞–π—Ç–∞
    rm -f /etc/nginx/sites-enabled/default
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if nginx -t 2>/dev/null; then
        systemctl reload nginx
        success "Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        warn "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    fi
}

# ============================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS
# ============================================
setup_https() {
    if [ "$HTTPS_ENABLED" == "no" ]; then
        return 0
    fi
    
    section "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS"
    
    if [ "$HTTPS_ENABLED" == "letsencrypt" ]; then
        # Let's Encrypt
        log "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –æ—Ç Let's Encrypt..."
        log "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–æ–º–µ–Ω $DOMAIN_NAME —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä!"
        echo ""
        
        echo -ne "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞? (y/n): "
        read -r -n 1 REPLY
        echo
        
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            if certbot --nginx -d "$DOMAIN_NAME" --non-interactive --agree-tos --email "admin@$DOMAIN_NAME"; then
                success "HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $DOMAIN_NAME"
            else
                warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
                log "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP"
            fi
        else
            log "HTTPS –ø—Ä–æ–ø—É—â–µ–Ω. –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∑–∂–µ."
        fi
        
    elif [ "$HTTPS_ENABLED" == "selfsigned" ]; then
        # –°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
        
        local ssl_dir="/etc/nginx/ssl"
        mkdir -p "$ssl_dir"
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout "$ssl_dir/selfsigned.key" \
            -out "$ssl_dir/selfsigned.crt" \
            -subj "/C=RU/ST=State/L=City/O=TelegrammBolt/CN=localhost" \
            2>/dev/null
        
        if [ $? -eq 0 ]; then
            chmod 600 "$ssl_dir/selfsigned.key"
            chmod 644 "$ssl_dir/selfsigned.crt"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ nginx –¥–ª—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
            cat > /etc/nginx/sites-available/telegrambot << EOF
server {
    listen 80;
    server_name _;
    return 301 https://\$host\$request_uri;
}

server {
    listen 443 ssl;
    server_name _;
    
    ssl_certificate $ssl_dir/selfsigned.crt;
    ssl_certificate_key $ssl_dir/selfsigned.key;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    location / {
        proxy_pass http://127.0.0.1:$WEB_PORT;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF
            
            systemctl restart nginx
            
            success "–°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω"
            warn "‚ö†Ô∏è  –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            log "–î–ª—è –¥–æ—Å—Ç—É–ø–∞: https://$(curl -s ifconfig.me 2>/dev/null || echo '–≤–∞—à-IP')"
        else
            error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
            log "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP"
        fi
    fi
}

# ============================================
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd —Å–ª—É–∂–±—ã
# ============================================
setup_service() {
    if [ "$DOCKER_ENV" == "true" ]; then
        warn "Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º systemd —Å–ª—É–∂–±—É"
        return 0
    fi
    
    section "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å–ª—É–∂–±—ã"
    
    log "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–ª—É–∂–±—ã..."
    
    cat > "$SERVICE_FILE" << EOF
[Unit]
Description=TelegrammBolt Telegram Bot
After=network.target

[Service]
Type=simple
User=$BOT_USER
WorkingDirectory=$BOT_DIR
Environment="PATH=$BOT_DIR/.venv/bin:/usr/local/bin:/usr/bin:/bin"
ExecStart=$BOT_DIR/.venv/bin/python $BOT_DIR/bot.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
    systemctl daemon-reload
    systemctl enable telegrambot.service
    
    success "–°–ª—É–∂–±–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# ============================================
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤
# ============================================
set_permissions() {
    section "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    
    chown -R "$BOT_USER:$BOT_USER" "$BOT_DIR"
    chmod 755 "$BOT_DIR"
    chmod 600 "$BOT_DIR/data/ven_bot.json"
    
    if [ -f "$BOT_DIR/data/smtp_config.json" ]; then
        chmod 600 "$BOT_DIR/data/smtp_config.json"
    fi
    
    success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# ============================================
# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# ============================================
show_final_info() {
    section "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    
    echo ""
    success "TelegrammBolt —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo -e "${GREEN}üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:${NC} $BOT_DIR"
    echo -e "${GREEN}üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:${NC} $BOT_USER"
    echo -e "${GREEN}ü§ñ –¢–æ–∫–µ–Ω –±–æ—Ç–∞:${NC} ${BOT_TOKEN:0:20}..."
    echo -e "${GREEN}üë®‚Äçüíº –ê–¥–º–∏–Ω—ã:${NC} $ADMIN_IDS"
    
    if [ "$WEB_ENABLED" == "yes" ]; then
        echo ""
        echo -e "${GREEN}üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:${NC} –í–∫–ª—é—á–µ–Ω"
        
        if [ "$HTTPS_ENABLED" == "letsencrypt" ]; then
            echo -e "${GREEN}üîó URL:${NC} https://$DOMAIN_NAME"
            echo -e "${GREEN}üîí SSL:${NC} Let's Encrypt"
        elif [ "$HTTPS_ENABLED" == "selfsigned" ]; then
            local server_ip=$(curl -s ifconfig.me 2>/dev/null || echo "–≤–∞—à-IP")
            echo -e "${GREEN}üîó URL:${NC} https://$server_ip"
            echo -e "${YELLOW}üîí SSL:${NC} –°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
            echo -e "${YELLOW}‚ö†Ô∏è  ${NC} –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
        else
            local server_ip=$(curl -s ifconfig.me 2>/dev/null || echo "–≤–∞—à-IP")
            echo -e "${GREEN}üîó URL:${NC} http://$server_ip:$WEB_PORT"
            echo -e "${YELLOW}‚ö†Ô∏è  ${NC} HTTP (–±–µ–∑ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è)"
        fi
    fi
    
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo -e "${YELLOW}üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:${NC}"
    echo ""
    
    if [ "$DOCKER_ENV" != "true" ]; then
        echo "  # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:"
        echo "  sudo systemctl start telegrambot"
        echo ""
        echo "  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞:"
        echo "  sudo systemctl stop telegrambot"
        echo ""
        echo "  # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:"
        echo "  sudo systemctl restart telegrambot"
        echo ""
        echo "  # –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å:"
        echo "  sudo systemctl status telegrambot"
        echo ""
        echo "  # –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:"
        echo "  sudo journalctl -u telegrambot -f"
    else
        echo "  # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (Docker):"
        echo "  cd $BOT_DIR && .venv/bin/python bot.py"
    fi
    
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo -e "${YELLOW}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
    echo "  ‚Ä¢ README.md - –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    echo "  ‚Ä¢ docs/INSTALLATION.md - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
    echo "  ‚Ä¢ docs/TROUBLESHOOTING.md - –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"
    echo "  ‚Ä¢ docs/CHEATSHEET.md - –®–ø–∞—Ä–≥–∞–ª–∫–∞"
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    
    echo -ne "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —Å–µ–π—á–∞—Å? (Y/n): "
    read -r -n 1 REPLY
    echo
    
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        if [ "$DOCKER_ENV" != "true" ]; then
            log "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
            systemctl start telegrambot
            sleep 2
            systemctl status telegrambot --no-pager
        else
            log "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –≤—Ä—É—á–Ω—É—é:"
            echo "  cd $BOT_DIR && .venv/bin/python bot.py"
        fi
    fi
    
    echo ""
    success "–ì–æ—Ç–æ–≤–æ! –ë–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω."
    echo ""
}

# ============================================
# –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# ============================================
main() {
    show_banner
    
    check_root
    check_system
    check_python
    update_system
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    configure_bot_token
    configure_admin_ids
    configure_smtp
    configure_web
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞
    create_bot_user
    clone_repository
    create_config_files
    setup_python_env
    set_permissions
    
    # –í–µ–± –∏ HTTPS
    if [ "$WEB_ENABLED" == "yes" ]; then
        configure_nginx
        setup_https
    fi
    
    # –°–ª—É–∂–±–∞
    setup_service
    
    # –§–∏–Ω–∞–ª
    show_final_info
}

# –ó–∞–ø—É—Å–∫
main "$@"
