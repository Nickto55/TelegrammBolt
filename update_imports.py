#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –ø–æ—Å–ª–µ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏
–ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è restructure.sh
"""

import os
import re
from pathlib import Path

# –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö –ø—É—Ç–µ–π –Ω–∞ –Ω–æ–≤—ã–µ
IMPORT_MAPPING = {
    # Bot managers
    'from user_manager import': 'from src.bot.managers.user_manager import',
    'import user_manager': 'import src.bot.managers.user_manager as user_manager',
    'from chat_manager import': 'from src.bot.managers.chat_manager import',
    'import chat_manager': 'import src.bot.managers.chat_manager as chat_manager',
    'from dse_manager import': 'from src.bot.managers.dse_manager import',
    'import dse_manager': 'import src.bot.managers.dse_manager as dse_manager',
    'from gui_manager import': 'from src.bot.managers.gui_manager import',
    'import gui_manager': 'import src.bot.managers.gui_manager as gui_manager',
    
    # Bot handlers
    'from commands import': 'from src.bot.handlers.commands import',
    'import commands': 'import src.bot.handlers.commands as commands',
    'from commands_handlers import': 'from src.bot.handlers.commands_handlers import',
    'import commands_handlers': 'import src.bot.handlers.commands_handlers as commands_handlers',
    
    # Bot workers
    'from dse_watcher import': 'from src.bot.workers.dse_watcher import',
    'import dse_watcher': 'import src.bot.workers.dse_watcher as dse_watcher',
    
    # Bot utils
    'from config import': 'from src.bot.utils.config import',
    'import config': 'import src.bot.utils.config as config',
    'from pdf_generator import': 'from src.bot.utils.pdf_generator import',
    'import pdf_generator': 'import src.bot.utils.pdf_generator as pdf_generator',
    'from genereteTabl import': 'from src.bot.utils.excel_generator import',
    'import genereteTabl': 'import src.bot.utils.excel_generator as genereteTabl',
}

# –ú–∞–ø–ø–∏–Ω–≥ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º
FILE_PATH_MAPPING = {
    'bot_data.json': 'data/bot_data.json',
    'users_data.json': 'data/users_data.json',
    'RezultBot.xlsx': 'data/RezultBot.xlsx',
    'photos/': 'data/photos/',
    'ven_bot.json': 'config/ven_bot.json',
    'smtp_config.json': 'config/smtp_config.json',
}


def update_imports_in_file(file_path):
    """–û–±–Ω–æ–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –≤ Python —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        changes = []
        
        # –û–±–Ω–æ–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã
        for old_import, new_import in IMPORT_MAPPING.items():
            if old_import in content:
                content = content.replace(old_import, new_import)
                changes.append(f"  - {old_import} ‚Üí {new_import}")
        
        # –û–±–Ω–æ–≤–∏—Ç—å –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        for old_path, new_path in FILE_PATH_MAPPING.items():
            # –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–∞–≤—ã—á–µ–∫
            for quote in ['"', "'"]:
                old_pattern = f'{quote}{old_path}'
                new_pattern = f'{quote}{new_path}'
                if old_pattern in content:
                    content = content.replace(old_pattern, new_pattern)
                    changes.append(f"  - {old_path} ‚Üí {new_path}")
        
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úì {file_path}")
            for change in changes:
                print(change)
            return True
        
        return False
    
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –≤ {file_path}: {e}")
        return False


def update_shell_scripts():
    """–û–±–Ω–æ–≤–∏—Ç—å –ø—É—Ç–∏ –≤ shell —Å–∫—Ä–∏–ø—Ç–∞—Ö"""
    script_updates = {
        'scripts/start/start_bot.sh': [
            ('python bot.py', 'python src/bot/main.py'),
            ('python3 bot.py', 'python3 src/bot/main.py'),
        ],
        'scripts/start/start_bot.bat': [
            ('python bot.py', 'python src\\bot\\main.py'),
        ],
        'scripts/setup/setup.sh': [
            ('cp ven_bot.json.example ven_bot.json', 'cp config/ven_bot.json.example config/ven_bot.json'),
            ('cp smtp_config.json.example smtp_config.json', 'cp config/smtp_config.json.example config/smtp_config.json'),
        ],
    }
    
    for script_path, replacements in script_updates.items():
        if os.path.exists(script_path):
            try:
                with open(script_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                for old, new in replacements:
                    content = content.replace(old, new)
                
                with open(script_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                
                print(f"‚úì {script_path}")
            except Exception as e:
                print(f"‚úó –û—à–∏–±–∫–∞ –≤ {script_path}: {e}")


def main():
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –ø—É—Ç–µ–π...")
    print()
    
    # –ù–∞–π—Ç–∏ –≤—Å–µ Python —Ñ–∞–π–ª—ã
    python_files = []
    for root, dirs, files in os.walk('.'):
        # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å .venv, __pycache__, .git
        dirs[:] = [d for d in dirs if d not in ['.venv', '__pycache__', '.git', '.idea']]
        
        for file in files:
            if file.endswith('.py'):
                file_path = os.path.join(root, file)
                python_files.append(file_path)
    
    print(f"üìù –ù–∞–π–¥–µ–Ω–æ {len(python_files)} Python —Ñ–∞–π–ª–æ–≤")
    print()
    
    # –û–±–Ω–æ–≤–∏—Ç—å Python —Ñ–∞–π–ª—ã
    print("üêç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Python —Ñ–∞–π–ª–æ–≤:")
    updated_count = 0
    for file_path in python_files:
        if update_imports_in_file(file_path):
            updated_count += 1
    
    print()
    print(f"‚úì –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Ñ–∞–π–ª–æ–≤")
    print()
    
    # –û–±–Ω–æ–≤–∏—Ç—å shell —Å–∫—Ä–∏–ø—Ç—ã
    print("üìú –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ shell —Å–∫—Ä–∏–ø—Ç–æ–≤:")
    update_shell_scripts()
    print()
    
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
    print()
    print("‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:")
    print("  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è: git diff")
    print("  2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞: python src/bot/main.py")
    print("  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–µ–±: python src/web/app.py")


if __name__ == '__main__':
    main()
